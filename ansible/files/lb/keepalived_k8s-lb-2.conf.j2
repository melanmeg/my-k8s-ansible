# Define the script used to check if haproxy is still working
vrrp_script chk_haproxy {
    script "/usr/bin/killall -0 haproxy"
    interval 2
    weight 2
}

# Configuration for Virtual Interface
vrrp_instance LB_VIP_1 {
  interface ens3
  state BACKUP
  priority 99
  virtual_router_id 1
  smtp_alert              # Enable Notifications Via Email
  authentication {
      auth_type AH
      auth_pass zaq12wsx	# Password for accessing vrrpd. Same on all devices
  }
  unicast_src_ip {{ hostvars['k8s-lb-1']['ansible_default_ipv4']['address'] }} # Private IP address of primary
  unicast_peer {
      {{ hostvars['k8s-lb-2']['ansible_default_ipv4']['address'] }} # Private IP address of the backup haproxy
  }
  virtual_ipaddress {
      {{ KUBE_API_SERVER_VIP }}
  }
  track_script {
      chk_haproxy
  }
}

vrrp_instance LB_VIP_2 {
  interface ens3
  state BACKUP
  priority 99
  virtual_router_id 2
  smtp_alert              # Enable Notifications Via Email
  authentication {
      auth_type AH
      auth_pass zaq12wsx  # Password for accessing vrrpd. Same on all devices
  }
  unicast_src_ip {{ hostvars['k8s-lb-1']['ansible_default_ipv4']['address'] }} # Private IP address of primary
  unicast_peer {
      {{ hostvars['k8s-lb-2']['ansible_default_ipv4']['address'] }} # Private IP address of the backup haproxy
  }
  virtual_ipaddress {
      192.168.11.161
  }
  track_script {
      chk_haproxy
  }
}
